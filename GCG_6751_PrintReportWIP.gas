Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.Global.sJob.Declare(String)
Variable.Global.sSuffix.Declare(String)
Variable.Global.sSeq.Declare(String)
Variable.Global.sQty.Declare(String,".000000")
Variable.Global.iBIRunID.Declare(Long,-1)
Variable.Global.iLogID.Declare(Long,-1)
Variable.Global.sSQL.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, May 16 2022
'This project is created within a VT session.
'This project will modify the PPT_Print_Report_WIP_Operation_Label.gas of the Move Ticket project.
'If a Termnial is not setup with a printer, the program will halt printing at the GUI for Move Ticket or Scrap Ticket. The logic will have to do with table GCG_3144_MVE_TKT_SU

'The maintenance program is still using the program PPT_Move_Tckt_Trmnl_Comments.gas which is setup in a custom menu item: On Line System > Administration > SFDC Move Ticket Terminal Maintenance

F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sComments.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.iC.Declare(Long)
V.Local.sRet.Declare(String)

V.global.sQty.Set(".000000")

F.ODBC.Connection!Con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

'if called from update job populate hook
F.Intrinsic.Control.If(V.Caller.Hook,=,"15840")
	Variable.passed.000048.set("Move Ticket")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf

'verify trmnl is on GCG_3144_MVE_TKT_SU to be able to print label/comments
F.Intrinsic.String.Build("SELECT * FROM GCG_3144_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstX",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstX.EOF,=,True)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstX.Close

F.Intrinsic.String.Build("DELETE FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.Execute(V.Global.sSQL)

'if called from the script1 button on GUI update job
F.Intrinsic.Control.If(V.Caller.Hook,=,"15850")
	V.Global.sJob.Set(V.passed.009990)
	V.Global.sSuffix.Set(V.Passed.009991)
	V.Global.sSeq.Set(V.Passed.009992)
	V.Global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments",V.Local.sComments,"sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Caller.Hook,=,"15890")
'if called from the Process button on update job
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments","","sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Caller.Hook,=,"15915")
'if called from the Process button on update multiple jobs			
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",".000000","sEmployee","","sWC","","sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments","","sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.Endif

F.Intrinsic.Control.If(V.Caller.Hook,=,"15881")
'if called from the Process button on update job (new pre-process hook for single and multiple)
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments",V.Local.sComments,"sScrapRef",V.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

'if called from cutlist schedule update screen OLL338
F.Intrinsic.Control.If(V.Caller.Hook,=,"41705")
	Function.Intrinsic.BDF.Load("GAB-BDF","AUX001")
	Function.Intrinsic.BDF.ReadRowCount("GAB-BDF",V.Local.iRows)
	Function.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
	Function.Intrinsic.Control.For(V.Local.iC,0,V.Local.iRows,1)
		Function.Intrinsic.BDF.ReadRow("GAB-BDF",V.Local.iC,V.Local.sRet)
		Function.Intrinsic.String.Split(V.Local.sRet,"|~|",V.Local.sRet)
'              get data out of sRet
		V.Global.sJob.Set(V.Local.sRet(0))
		V.Global.ssuffix.Set(V.Local.sRet(1))
		V.Global.sSeq.Set(V.Local.sRet(2))
		F.Intrinsic.String.LPad(V.Global.sSeq,0,6,V.Global.sSeq)
'               set sequence to first labor seq		
		F.Intrinsic.String.Build("SELECT SEQ FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
			V.Global.sSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSel.Close

		V.Global.sQty.Set(V.Local.sRet(9))
		F.Intrinsic.Control.If(V.Global.sQty,=,"")
			V.Global.sQty.Set(".000000")
		F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",".000000","sEmployee",V.Caller.User,"sWC",V.Passed.000179,"sQualitynbr","","sCloseflag","","sComments","","sScrapRef",v.Passed.SCRAP-REF)
	Function.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

Program.Sub.PrintTicket.Start
F.Intrinsic.Control.SetErrorHandler("PrintTicket_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sScrapQty.Declare(String)
V.Local.sCurPart.Declare(String)
V.Local.sCurDescr.Declare(String)
V.Local.sQtyCompleted.Declare(Float)
V.Local.sNextSeq.Declare(String)
V.Local.sNextPart.Declare(String)
V.Local.sNextDescr.Declare(String)
V.Local.sLMO.Declare(String)
V.Local.sNext_DateStart.Declare(String)
V.Local.sNext_DateDue.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sWOPriority.Declare(String)
V.Local.sPartDescr.Declare(String)
V.Local.sWOQty.Declare(String)
V.Local.sWOCustQty.Declare(String)
V.Local.sWODateDue.Declare(String)
V.Local.sName.Declare(String)
V.Local.sEmployee.Declare(String)
V.Local.sScrapCode.Declare(String)
V.Local.sScrapDescription.Declare(String)
V.Local.sParentJob.Declare(String)
V.Local.sParentSuffix.Declare(String)
V.Local.sParentPart.Declare(String)
V.Local.sParentDescr.Declare(String)
V.Local.sTopParentJob.Declare(String)
V.Local.sTopParentSuffix.Declare(String)
V.Local.sTopParentPart.Declare(String)
V.Local.sTopParentDescr.Declare(String)
V.Local.sParentInitWC.Declare(String)
V.Local.sWC.Declare(String)
V.Local.sQualitynbr.Declare(String)
V.Local.sCloseflag.Declare(String)
V.Local.sComments.Declare(String)
V.Local.sRptLoc.Declare(String)
V.Local.iRptID.Declare(Long)
V.Local.sTPrinter.Declare(String)
V.Local.sScrapPrinter.Declare(String)
V.Local.sScrapFlag.Declare(String)
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.Local.sScrapRef.Declare(String)
V.Local.dNext_DateStart.Declare(Date)
V.Local.dNext_DateDue.Declare(Date)
v.Local.iRet.Declare(Long)

V.Local.sScrapQty.Set(V.Args.sScrapQty)
V.Local.sEmployee.Set(V.Args.sEmployee)
V.Local.sWC.Set(V.Args.sWC)
V.Local.sQualitynbr.Set(V.Args.sQualitynbr)
V.Local.sCloseflag.Set(V.Args.sCloseflag)
V.Local.sComments.Set(V.Args.sComments)
V.Local.sScrapRef.Set(V.Args.sScrapRef)

'if good pieces is 0 then don't continue
'F.Intrinsic.Control.If(V.Global.sQty,=,".000000","AND",V.Local.sscrapqty,=,".000000")
F.Intrinsic.Control.If(V.Global.sQty.Float,<=,0,"AND",V.Local.sscrapqty.Float,<=,0)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
'update
F.Intrinsic.String.Build("SELECT PART, DESCRIPTION, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}' ",V.Global.sjob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sCurPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCurDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sQtyCompleted.Set(V.ODBC.Con!rstSel.FieldValTrim!UNITS_COMPLETE)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION, LMO, DATE_START, DATE_DUE, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sNextSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
	V.Local.sNextPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sNextDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sLMO.Set(V.ODBC.Con!rstSel.FieldValTrim!LMO)
'	V.Local.sNext_DateStart.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_START)
'	V.Local.sNext_DateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
	V.Local.dNext_DateStart.Set(V.ODBC.Con!rstSel.FieldVal!DATE_START)
	V.Local.dNext_DateDue.Set(V.ODBC.Con!rstSel.FieldVal!DATE_DUE)
F.Intrinsic.Control.Else
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateStart)
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateDue)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART, CUSTOMER, PRIORITY, PART_DESCRIPTION,QTY_ORDER, QTY_CUSTOMER, DATE_DUE FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCust.Set(V.ODBC.Con!rstSel.FieldValTrim!CUSTOMER)
	V.Local.sWOPriority.Set(V.ODBC.Con!rstSel.FieldValTrim!PRIORITY)
	V.Local.sPartDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!PART_DESCRIPTION)
	V.Local.sWOQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_ORDER)
	V.Local.sWOCustQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_CUSTOMER)
	V.Local.sWODateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",V.Local.sCust.PSQLFriendly,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sName.Set(V.ODBC.Con!rstSel.FieldValTrim!NAME_CUSTOMER)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT SCRAP_REASON FROM V_JOBS_IN_PROCESS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}' AND EMPLOYEE_NAME = '{3}' ORDER BY SEQUENCE_KEY DESC ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Local.sEmployee.PSQLFriendly,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!SCRAP_REASON)
	F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PARENT_WO, PARENT_SUFFIX_PARENT FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_WO)
	V.Local.sParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_Suffix_Parent)
	F.Intrinsic.String.Build("SELECT PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sParentPart.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part)
		V.Local.sParentDescr.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part_Description)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT JOB, SUFFIX, PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '000' ",V.Global.sJob,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTopParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Job)
	V.Local.sTopParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Suffix)
	V.Local.sTopParentPart.Set(V.ODBC.Con!rstSel.FieldValTrim!Part)
	V.Local.sTopParentDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!Part_Description)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'L' ORDER BY SEQ ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentInitWC.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRW("rstSel",V.global.sSQL)
F.ODBC.Con!rstSel.AddNew
F.ODBC.Con!rstSel.Set!TRMNL(V.Caller.Terminal)
F.ODBC.Con!rstSel.Set!JOB(V.global.sJob)
F.ODBC.Con!rstSel.Set!SUFFIX(V.global.sSuffix)
F.ODBC.Con!rstSel.Set!CUR_SEQ(V.global.sSeq)
F.ODBC.Con!rstSel.Set!CUR_PART(V.Local.sCurPart)
F.ODBC.Con!rstSel.Set!CUR_DESCR(V.Local.sCurDescr)
F.ODBC.Con!rstSel.Set!LMO(V.Local.sLMO)
F.ODBC.Con!rstSel.Set!QTY(V.global.sQty)
F.ODBC.Con!rstSel.Set!WORKCENTER(V.Local.sWC)
F.ODBC.Con!rstSel.Set!EMPLOYEE(V.Local.sEmployee)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
F.ODBC.Con!rstSel.Set!SCRAP_CODE(V.Local.sScrapCode)
F.ODBC.Con!rstSel.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
F.ODBC.Con!rstSel.Set!SCRAP_QTY(V.Local.sScrapqty)
F.ODBC.Con!rstSel.Set!CLOSE_FLAG(V.Local.sCloseflag)
F.ODBC.Con!rstSel.Set!PART(V.Local.sPart)
F.ODBC.Con!rstSel.Set!CUSTOMER(V.Local.sCust)
F.ODBC.Con!rstSel.Set!NAME(V.Local.sName)
F.ODBC.Con!rstSel.Set!NEXT_SEQ(V.Local.sNextSeq)
F.ODBC.Con!rstSel.Set!NEXT_PART(V.Local.sNextPart)
F.ODBC.Con!rstSel.Set!NEXT_DESCR(V.Local.sNextDescr)
F.ODBC.Con!rstSel.Set!Parent_Job(V.Local.sParentJob)
F.ODBC.Con!rstSel.Set!Parent_Suffix(V.Local.sParentSuffix)
F.ODBC.Con!rstSel.Set!Parent_Part(V.Local.sParentPart)
F.ODBC.Con!rstSel.Set!Parent_Descr(V.Local.sParentDescr)
F.ODBC.Con!rstSel.Set!Top_Parent_Job(V.Local.sTopParentJob)
F.ODBC.Con!rstSel.Set!Top_Parent_Suffix(V.Local.sTopParentSuffix)
F.ODBC.Con!rstSel.Set!Top_Parent_Part(V.Local.sTopParentPart)
F.ODBC.Con!rstSel.Set!Top_Parent_Descr(V.Local.sTopParentDescr)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
'F.ODBC.Con!rstSel.Set!NEXT_SEQ_START(V.Local.sNext_DateStart)
'F.ODBC.Con!rstSel.Set!NEXT_SEQ_DUE(V.Local.sNext_DateDue)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_START(V.Local.dNext_DateStart.PervasiveDate)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_DUE(V.Local.dNext_DateDue.PervasiveDate)
F.ODBC.Con!rstSel.Set!WO_PRIORITY(V.Local.sWOPriority)
F.ODBC.Con!rstSel.Set!PART_DESCR(V.Local.sPartDescr)
F.ODBC.Con!rstSel.Set!WO_QTY(V.Local.sWOQty)
F.ODBC.Con!rstSel.Set!WO_CUSTOMER_QTY(V.Local.sWOCustQty)
F.ODBC.Con!rstSel.Set!WO_DUE_DATE(V.Local.sWODateDue)
F.ODBC.Con!rstSel.Set!QTY_COMPLETED(V.Local.sQtyCompleted)
F.ODBC.Con!rstSel.Set!Parent_InitWC(V.Local.sParentInitWC)
F.ODBC.Con!rstSel.Set!Comments(V.Local.sComments)
F.ODBC.Con!rstSel.Update
F.ODBC.Con!rstSel.Close
F.Intrinsic.String.Build("{0}\Custom\GCG_3144_WIP_Operation_Label.rpt",V.Caller.BusintDir,V.Local.sRptLoc)
F.Global.BI.InitializeReport("GCG_3144_WIP_Operation_Label",V.Local.sRptLoc,V.Local.iRptID)

F.Intrinsic.String.Build("SELECT PRINTER, SCRAPPRINTER FROM GCG_3144_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
'If there is a printer setup with this Terminal
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!Printer)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter,=,"")
		V.Local.sScrapPrinter.Set(V.Local.sTPrinter)
	F.Intrinsic.Control.Else
		V.Local.sScrapPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter)
	F.Intrinsic.Control.EndIf
	
	'BN, May 16 2022
	'There is a record but the printer is blank
	f.Intrinsic.Control.If(v.Local.sTPrinter.Trim,=,"")
		'End the program and do not print, no matter it is a scrap label nor a main label
		f.Intrinsic.Control.CallSub(Stop_Printing)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf


'BN, May 16 2022
'In case there is no record setup for this termnial
f.Intrinsic.Control.Else
	'End the program and do not print, no matter it is a scrap label nor a main label
	f.Intrinsic.Control.CallSub(Stop_Printing)
	f.Intrinsic.Control.ExitSub	
F.Intrinsic.Control.EndIf

'F.Intrinsic.Control.If(V.global.sQty,<>,".000000")
F.Intrinsic.Control.If(V.Global.sQty.Float,>,0)
	
	V.Local.sScrapflag.Set("N")	

	'f.Global.BI.GetRunID(v.Global.iBIRunID)
	'f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)
	'v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
	'F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
	'f.Global.BI.StopLogging(v.Global.iLogID)
	'f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,False,"",1,v.Local.sTPrinter,-1,"","",v.Local.iRet)	
	
	' Comment out the following block and uncomment the above block to do things the way it did when this project was Certified (Jul 2017 ish).
	' Apr 2019: PrintReport is brought back from the older version. Note the True for the isSynchronous argument. This combined with setting the 15881 hook sequence to synchronous should resolve the issue where multiple tickets were not printing as expected when processing multiple quantity changes at once.
	F.Intrinsic.String.Split("TRMNL*!*Job*!*Suffix*!*Scrapflag","*!*",V.Local.sParams)
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
	F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)
	F.Global.BI.PrintReport(V.Local.iRptID,3,V.Local.sParams,V.Local.sValues,V.Local.sTPrinter,True)
	
	
F.Intrinsic.Control.Endif
F.ODBC.Con!rstSel.Close

' Scrap Printer added as optional quantentine label printer when scrap labels printed on colored label stock
'F.Intrinsic.Control.If(V.Local.sScrapQty,<>,".000000")

' SCRAP-REF = 0 if the user presses the Script 1 button on the processing screen.
'	If it is 0 and there was a scrap qty that will be processed later, it would try to go in here and incorrectly print out all the 0 SCRAP_REF rows.
'	This check prevents that.
'	Not sure if AND for If statements works in runtime 1, so just addding it as another nested If.
F.Intrinsic.Control.If(V.Local.sScrapRef.Float,>,0)
F.Intrinsic.Control.If(V.Local.sscrapqty.Float,>,0)

	V.Local.sScrapflag.Set("Y")

	'Scrap - loop through scrap_data table by scrap_ref = sscrapref

	F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE SCRAP_REF = '{0}' ",V.Local.sScrapRef,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)

	Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)

		V.Local.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
		V.Local.sScrapQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
		V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)

		F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close

		F.Intrinsic.String.Build("SELECT * FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRW("rstSelB",V.global.sSQL)

		F.ODBC.Con!rstSelB.Set!QUALITY_NO(V.Local.sQualitynbr)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE(V.Local.sScrapCode)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
		F.ODBC.Con!rstSelB.Set!SCRAP_QTY(V.Local.sscrapqty)
		F.ODBC.Con!rstSelB.Update
		F.ODBC.Con!rstSelB.Close


		
		'f.Global.BI.GetRunID(v.Global.iBIRunID)
		'f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)
		'v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
		'F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
		'f.Global.BI.StopLogging(v.Global.iLogID)
		'f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,False,"",1,v.Local.sScrapPrinter,-1,"","",v.Local.iRet)
		
		
		
		' Similar to Apr 2019 changes above to the non-scrap quantity processing.
		' Comment out the following block and uncomment the above block to do things the way it did when this project was Certified (Jul 2017 ish).
		' Jun 2019: PrintReport is brought back from the older version. Note the True for the isSynchronous argument. This combined with setting the 15881 hook sequence to synchronous should resolve the issue where multiple tickets were not printing as expected when processing multiple quantity changes at once.
		F.Intrinsic.String.Split("TRMNL*!*Job*!*Suffix*!*Scrapflag","*!*",V.Local.sParams)
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
		F.Intrinsic.String.Split(V.Local.sValues,"*!*",V.Local.sValues)
		F.Global.BI.PrintReport(V.Local.iRptID,3,V.Local.sParams,V.Local.sValues,V.Local.sScrapPrinter,True)
		
		

		F.ODBC.con!rstSel.MoveNext
	Function.Intrinsic.Control.Loop
	F.ODBC.Con!rstSel.Close

F.Intrinsic.Control.Endif
F.Intrinsic.Control.Endif

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PrintTicket_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.PrintTicket.End

Program.Sub.Stop_Printing.Start
F.Intrinsic.Control.SetErrorHandler("PrintTicket_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)
	v.Local.sDir.Declare
	v.Local.bEx.Declare
	v.Local.sFile.Declare
	v.Local.sContent.Declare
	v.Local.sHold.Declare
	
	'No need to log anymore

'	'Folder path
'	f.Intrinsic.String.Build("{0}\Custom\6751\{1}",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Local.sDir)
'	f.Intrinsic.File.Exists(v.Local.sDir,v.Local.bEx)
'	f.Intrinsic.Control.If(v.Local.bEx.Not)
'		f.Intrinsic.File.CreateDir(v.Local.sDir)
'	f.Intrinsic.Control.EndIf
'	
'	'Build log file
'	f.Intrinsic.String.Build("{0}\Custom\6751\{1}\NoPrinter{2}_{3}.txt",v.Caller.GlobalDir,v.Caller.CompanyCode,v.Caller.Terminal,v.Ambient.Now.FormatYYYYMMDD,v.Local.sFile)
'	
'	'Log line
'	f.Intrinsic.String.Build("{0}: No Printer setup",v.Ambient.Now,v.Local.sContent)
'	
'	'Save
'	f.Intrinsic.File.Exists(v.Local.sFile,v.Local.bEx)
'	f.Intrinsic.Control.If(v.Local.bEx.Not)
'		f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sContent)
'	f.Intrinsic.Control.Else
'		f.Intrinsic.File.File2String(v.Local.sFile,v.Local.sHold)
'		f.Intrinsic.String.Build("{0}{1}{2}: No Printer setup",v.Local.sHold,v.Ambient.NewLine,v.Ambient.Now,v.Local.sContent)
'		f.Intrinsic.File.String2File(v.Local.sFile,v.Local.sContent)
'	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PrintTicket_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Stop_Printing.End

Program.Sub.Comments.Start
${$0$}$GCG_3144_Print_Report_WIP_Operation$}$Strider$}$12/8/2015$}$False
${$1$}$$}$$}$3$}$41705$}$Pre-Ok$}$12/8/2015 12:39:49 PM$}$(Program: OLL338; Screen: OLS338)

${$1$}$$}$$}$2$}$15881$}$OLS003 Process Line Hook$}$12/8/2015 12:39:36 PM$}$(Program: OLG002; Screen: OLS003)

${$1$}$$}$$}$1$}$15850$}$OLS003-PB-SCRIPT-1-HOOK (On-line GUI)$}$12/8/2015 12:39:19 PM$}$(Program: OLG002; Screen: OLS003)

${$1$}$$}$$}$0$}$15840$}$OLS003-POPULATE-HOOK (On-line GUI)$}$12/8/2015 12:38:39 PM$}$(Program: OLG002; Screen: OLS003)

${$2$}$$}$$}$1$}$4$}$SQL$}$12/8/2015 12:40:37 PM$}$GCG_3144_WIP_OP_LABL
${$2$}$$}$$}$0$}$2$}$GAB$}$12/8/2015 12:38:39 PM$}$GCG_3144_MOVE_TCKT_TRMNL_COMMENTS.gas
${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$Purpose:
? Paperless ? at least less paper?
? Identify movement of partial/complete transfers between operations
? Identify scrap/rejected parts for quality (ISO required)

Move Tickets will print for both good and scrap pieces reported when updating labor on an active work order.


Original Project 1011
Program.Sub.Comments.End